<?xml version="1.0"?>
<launch>
  <param name="/use_sim_time" value="true" />
  <arg name="robot_name"/>
  <arg name="init_pose"/>
  <arg name= "limited" default= "false"/>
  <arg name="paused" default="false" doc="Starts gazebo in paused mode" />
  <arg name="transmission_hw_interface" default="hardware_interface/PositionJointInterface" />
  <arg name="gui" default="true" doc="Starts gazebo gui" />
  <param unless="$(arg limited)" name="robot_description" command="$(find xacro)/xacro --inorder '$(find ur_description)/urdf/ur5_robot.urdf.xacro' transmission_hw_interface:=$(arg transmission_hw_interface)" />
  <param if="$(arg limited)" name="robot_description" command="$(find xacro)/xacro --inorder '$(find ur_description)/urdf/ur5_joint_limited_robot.urdf.xacro' transmission_hw_interface:=$(arg transmission_hw_interface)" />

  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" default="$(find multi_ur5)worlds/test_picking.world"/>
    <arg name="paused" value="$(arg paused)"/>
    <arg name="gui" value="$(arg gui)"/>
  </include>

  <!-- <group ns="/robot1">
    <param name="tf_prefix" value="/robot1_tf" />
      <include file="$(find multi_ur5)/launch/multi_ur5.launch">
        <arg name="init_pose" value="-x 0 -y 0 -z 0"/>
        <arg name="robot_name" value="/robot1"/>
      </include>
    </group> -->
  <group ns="/robot1">
    <rosparam file="$(find ur_gazebo)/controller/arm_controller_ur5.yaml" command="load"/>
    <include file="$(find multi_ur5)/launch/multi_controller_utils.launch"/>
    <!-- <node name="robot1_arm_controller_spawner" pkg="controller_manager" type="controller_manager" ns="/robot1" args="spawn arm_controller" respawn="false" output="screen"/> -->
    <node name="robot1_arm_controller_spawner" pkg="controller_manager" type="spawner" ns="/robot1" args="--namespace=/robot1 arm_controller joint_state_controller --shutdown-timeout 3" respawn="false" output="screen"/>
      <!-- send robot urdf to param server -->
    <include file="$(find multi_ur5_description)/launch/multi_upload.launch">
    <arg name="limited" value="$(arg limited)"/>
    </include><!-- push robot_description to factory and spawn robot in gazebo -->
    <node name="robot1_spawn_gazebo_model" pkg="gazebo_ros" type="spawn_model" 
         args="-urdf -param robot_description -model robot1 -z 0
            -J elbow_joint 1.5
            -J shoulder_lift_joint -1.22
            -J shoulder_pan_joint 0"
         output="screen" />
  </group>
<!--   
  <group ns="/robot2">
    <param name="tf_prefix" value="/robot2_tf" />
      <include file="$(find multi_ur5)/launch/multi_ur5.launch">
        <arg name="init_pose" value="-x 1.5 -y 0 -z 0"/>
        <arg name="robot_name" value="/robot2"/>
      </include>
    </group> -->
  <group ns="/robot2">
    <rosparam file="$(find ur_gazebo)/controller/arm_controller_ur5.yaml" command="load"/>
    <include file="$(find multi_ur5)/launch/multi_controller_utils.launch"/>
    <!-- <node name="robot2_arm_controller_spawner" pkg="controller_manager" type="controller_manager" ns="/robot2" args="spawn arm_controller" respawn="false" output="screen"/> -->
    <node name="robot2_arm_controller_spawner" pkg="controller_manager" type="spawner" ns="/robot2" args="--namespace=/robot2 arm_controller joint_state_controller --shutdown-timeout 3" respawn="false" output="screen"/>
      <!-- send robot urdf to param server -->
    <include file="$(find multi_ur5_description)/launch/multi_upload.launch">
    <arg name="limited" value="$(arg limited)"/>
    </include><!-- push robot_description to factory and spawn robot in gazebo -->
    <node name="robot2_spawn_gazebo_model" pkg="gazebo_ros" type="spawn_model" 
         args="-urdf -param robot_description -model robot2 -x 1.5
            -J elbow_joint 1.5
            -J shoulder_lift_joint -1.22
            -J shoulder_pan_joint -3.16"
         output="screen" />
  </group>
</launch>